datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [unaccent]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

enum Tier {
  TRIAL
  PRO
}

model User {
  id                      String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name                    String
  email                   String   @unique
  tier                    Tier     @default(TRIAL)
  avatar                  String?
  subscription_expires_at DateTime @db.Timestamptz()
  synchronized_at         DateTime @default(now()) @db.Timestamptz()
  created_at              DateTime @default(now()) @db.Timestamptz()
  updated_at              DateTime @updatedAt @db.Timestamptz()

  budget Budget?

  transactions Transaction[]

  accounts Account[]

  @@map("users")
}

enum PaymentMethod {
  PIX
  BOLETO
  CREDIT_CARD
  DEBIT_CARD
  TRANSFERENCE
  UNKNOWN
}

model Transaction {
  id             String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_id    String        @unique
  name           String
  description    String?
  amount         BigInt
  payment_method PaymentMethod @default(UNKNOWN)
  is_ignored     Boolean       @default(false)
  date           DateTime      @db.Timestamptz()
  created_at     DateTime      @default(now()) @db.Timestamptz()
  updated_at     DateTime      @updatedAt @db.Timestamptz()

  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user_id String @db.Uuid

  account    Account? @relation(fields: [account_id], references: [id], onDelete: SetNull, onUpdate: Cascade)
  account_id String?  @db.Uuid

  category    Category? @relation(fields: [category_id], references: [id], onDelete: SetNull, onUpdate: Cascade)
  category_id String?   @db.Uuid

  @@map("transactions")
}

model Category {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_id String   @unique
  name        String
  created_at  DateTime @default(now()) @db.Timestamptz()
  updated_at  DateTime @updatedAt @db.Timestamptz()

  transactions Transaction[]

  budget_categories BudgetCategory[]

  @@map("categories")
}

enum AccountType {
  BANK
  CREDIT
  UNKNOWN
}

model Account {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_id String      @unique
  name        String
  type        AccountType @default(UNKNOWN)
  created_at  DateTime    @default(now()) @db.Timestamptz()
  updated_at  DateTime    @updatedAt @db.Timestamptz()

  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user_id String @db.Uuid

  institution    Institution @relation(fields: [institution_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  institution_id String      @db.Uuid

  transactions Transaction[]

  @@map("accounts")
}

model Institution {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  external_id String   @unique
  name        String
  image_url   String?
  created_at  DateTime @default(now()) @db.Timestamptz()
  updated_at  DateTime @updatedAt @db.Timestamptz()

  accounts Account[]

  @@map("institutions")
}

model Budget {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount     BigInt
  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @updatedAt @db.Timestamptz()

  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user_id String @unique @db.Uuid

  budget_categories BudgetCategory[]

  @@map("budgets")
}

model BudgetCategory {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount     BigInt
  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @updatedAt @db.Timestamptz()

  budget    Budget @relation(fields: [budget_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  budget_id String @db.Uuid

  category    Category @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  category_id String   @db.Uuid

  @@map("budget_categories")
}
