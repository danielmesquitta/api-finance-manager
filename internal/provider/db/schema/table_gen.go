// Code generated by prisma-go-tools. DO NOT EDIT.

package schema

import "fmt"

type tableAIChat string

func (t tableAIChat) String() string {
	return string(t)
}

func (t tableAIChat) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tableAIChat) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tableAIChat) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tableAIChat) ID() string {
	return fmt.Sprintf("%s.id", t)
}

func (t tableAIChat) Title() string {
	return fmt.Sprintf("%s.title", t)
}

func (t tableAIChat) UpdatedAt() string {
	return fmt.Sprintf("%s.updated_at", t)
}

func (t tableAIChat) UserID() string {
	return fmt.Sprintf("%s.user_id", t)
}

const AIChat = tableAIChat("ai_chats")

type tableAIChatAnswer string

func (t tableAIChatAnswer) String() string {
	return string(t)
}

func (t tableAIChatAnswer) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tableAIChatAnswer) AiChatMessageID() string {
	return fmt.Sprintf("%s.ai_chat_message_id", t)
}

func (t tableAIChatAnswer) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tableAIChatAnswer) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tableAIChatAnswer) ID() string {
	return fmt.Sprintf("%s.id", t)
}

func (t tableAIChatAnswer) Message() string {
	return fmt.Sprintf("%s.message", t)
}

func (t tableAIChatAnswer) Rating() string {
	return fmt.Sprintf("%s.rating", t)
}

func (t tableAIChatAnswer) UpdatedAt() string {
	return fmt.Sprintf("%s.updated_at", t)
}

const AIChatAnswer = tableAIChatAnswer("ai_chat_answers")

type tableAIChatMessage string

func (t tableAIChatMessage) String() string {
	return string(t)
}

func (t tableAIChatMessage) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tableAIChatMessage) AiChatID() string {
	return fmt.Sprintf("%s.ai_chat_id", t)
}

func (t tableAIChatMessage) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tableAIChatMessage) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tableAIChatMessage) ID() string {
	return fmt.Sprintf("%s.id", t)
}

func (t tableAIChatMessage) Message() string {
	return fmt.Sprintf("%s.message", t)
}

const AIChatMessage = tableAIChatMessage("ai_chat_messages")

type tableAccount string

func (t tableAccount) String() string {
	return string(t)
}

func (t tableAccount) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tableAccount) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tableAccount) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tableAccount) ExternalID() string {
	return fmt.Sprintf("%s.external_id", t)
}

func (t tableAccount) ID() string {
	return fmt.Sprintf("%s.id", t)
}

func (t tableAccount) Name() string {
	return fmt.Sprintf("%s.name", t)
}

func (t tableAccount) Type() string {
	return fmt.Sprintf("%s.type", t)
}

func (t tableAccount) UserInstitutionID() string {
	return fmt.Sprintf("%s.user_institution_id", t)
}

const Account = tableAccount("accounts")

type tableAccountBalance string

func (t tableAccountBalance) String() string {
	return string(t)
}

func (t tableAccountBalance) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tableAccountBalance) AccountID() string {
	return fmt.Sprintf("%s.account_id", t)
}

func (t tableAccountBalance) Amount() string {
	return fmt.Sprintf("%s.amount", t)
}

func (t tableAccountBalance) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tableAccountBalance) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tableAccountBalance) ID() string {
	return fmt.Sprintf("%s.id", t)
}

const AccountBalance = tableAccountBalance("account_balances")

type tableBudget string

func (t tableBudget) String() string {
	return string(t)
}

func (t tableBudget) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tableBudget) Amount() string {
	return fmt.Sprintf("%s.amount", t)
}

func (t tableBudget) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tableBudget) Date() string {
	return fmt.Sprintf("%s.date", t)
}

func (t tableBudget) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tableBudget) ID() string {
	return fmt.Sprintf("%s.id", t)
}

func (t tableBudget) UpdatedAt() string {
	return fmt.Sprintf("%s.updated_at", t)
}

func (t tableBudget) UserID() string {
	return fmt.Sprintf("%s.user_id", t)
}

const Budget = tableBudget("budgets")

type tableBudgetCategory string

func (t tableBudgetCategory) String() string {
	return string(t)
}

func (t tableBudgetCategory) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tableBudgetCategory) Amount() string {
	return fmt.Sprintf("%s.amount", t)
}

func (t tableBudgetCategory) BudgetID() string {
	return fmt.Sprintf("%s.budget_id", t)
}

func (t tableBudgetCategory) CategoryID() string {
	return fmt.Sprintf("%s.category_id", t)
}

func (t tableBudgetCategory) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tableBudgetCategory) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tableBudgetCategory) ID() string {
	return fmt.Sprintf("%s.id", t)
}

func (t tableBudgetCategory) UpdatedAt() string {
	return fmt.Sprintf("%s.updated_at", t)
}

const BudgetCategory = tableBudgetCategory("budget_categories")

type tableFeedback string

func (t tableFeedback) String() string {
	return string(t)
}

func (t tableFeedback) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tableFeedback) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tableFeedback) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tableFeedback) ID() string {
	return fmt.Sprintf("%s.id", t)
}

func (t tableFeedback) Message() string {
	return fmt.Sprintf("%s.message", t)
}

func (t tableFeedback) UserID() string {
	return fmt.Sprintf("%s.user_id", t)
}

const Feedback = tableFeedback("feedbacks")

type tableInstitution string

func (t tableInstitution) String() string {
	return string(t)
}

func (t tableInstitution) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tableInstitution) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tableInstitution) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tableInstitution) ExternalID() string {
	return fmt.Sprintf("%s.external_id", t)
}

func (t tableInstitution) ID() string {
	return fmt.Sprintf("%s.id", t)
}

func (t tableInstitution) Logo() string {
	return fmt.Sprintf("%s.logo", t)
}

func (t tableInstitution) Name() string {
	return fmt.Sprintf("%s.name", t)
}

const Institution = tableInstitution("institutions")

type tablePaymentMethod string

func (t tablePaymentMethod) String() string {
	return string(t)
}

func (t tablePaymentMethod) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tablePaymentMethod) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tablePaymentMethod) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tablePaymentMethod) ExternalID() string {
	return fmt.Sprintf("%s.external_id", t)
}

func (t tablePaymentMethod) ID() string {
	return fmt.Sprintf("%s.id", t)
}

func (t tablePaymentMethod) Name() string {
	return fmt.Sprintf("%s.name", t)
}

const PaymentMethod = tablePaymentMethod("payment_methods")

type tableTransaction string

func (t tableTransaction) String() string {
	return string(t)
}

func (t tableTransaction) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tableTransaction) AccountID() string {
	return fmt.Sprintf("%s.account_id", t)
}

func (t tableTransaction) Amount() string {
	return fmt.Sprintf("%s.amount", t)
}

func (t tableTransaction) CategoryID() string {
	return fmt.Sprintf("%s.category_id", t)
}

func (t tableTransaction) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tableTransaction) Date() string {
	return fmt.Sprintf("%s.date", t)
}

func (t tableTransaction) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tableTransaction) ExternalID() string {
	return fmt.Sprintf("%s.external_id", t)
}

func (t tableTransaction) ID() string {
	return fmt.Sprintf("%s.id", t)
}

func (t tableTransaction) InstitutionID() string {
	return fmt.Sprintf("%s.institution_id", t)
}

func (t tableTransaction) IsIgnored() string {
	return fmt.Sprintf("%s.is_ignored", t)
}

func (t tableTransaction) Name() string {
	return fmt.Sprintf("%s.name", t)
}

func (t tableTransaction) PaymentMethodID() string {
	return fmt.Sprintf("%s.payment_method_id", t)
}

func (t tableTransaction) UpdatedAt() string {
	return fmt.Sprintf("%s.updated_at", t)
}

func (t tableTransaction) UserID() string {
	return fmt.Sprintf("%s.user_id", t)
}

const Transaction = tableTransaction("transactions")

type tableTransactionCategory string

func (t tableTransactionCategory) String() string {
	return string(t)
}

func (t tableTransactionCategory) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tableTransactionCategory) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tableTransactionCategory) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tableTransactionCategory) ExternalID() string {
	return fmt.Sprintf("%s.external_id", t)
}

func (t tableTransactionCategory) ID() string {
	return fmt.Sprintf("%s.id", t)
}

func (t tableTransactionCategory) Name() string {
	return fmt.Sprintf("%s.name", t)
}

func (t tableTransactionCategory) UpdatedAt() string {
	return fmt.Sprintf("%s.updated_at", t)
}

const TransactionCategory = tableTransactionCategory("transaction_categories")

type tableUser string

func (t tableUser) String() string {
	return string(t)
}

func (t tableUser) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tableUser) Avatar() string {
	return fmt.Sprintf("%s.avatar", t)
}

func (t tableUser) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tableUser) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tableUser) Email() string {
	return fmt.Sprintf("%s.email", t)
}

func (t tableUser) ID() string {
	return fmt.Sprintf("%s.id", t)
}

func (t tableUser) Language() string {
	return fmt.Sprintf("%s.language", t)
}

func (t tableUser) Name() string {
	return fmt.Sprintf("%s.name", t)
}

func (t tableUser) SubscriptionExpiresAt() string {
	return fmt.Sprintf("%s.subscription_expires_at", t)
}

func (t tableUser) SynchronizedAt() string {
	return fmt.Sprintf("%s.synchronized_at", t)
}

func (t tableUser) Tier() string {
	return fmt.Sprintf("%s.tier", t)
}

func (t tableUser) UpdatedAt() string {
	return fmt.Sprintf("%s.updated_at", t)
}

const User = tableUser("users")

type tableUserAuthProvider string

func (t tableUserAuthProvider) String() string {
	return string(t)
}

func (t tableUserAuthProvider) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tableUserAuthProvider) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tableUserAuthProvider) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tableUserAuthProvider) ExternalID() string {
	return fmt.Sprintf("%s.external_id", t)
}

func (t tableUserAuthProvider) ID() string {
	return fmt.Sprintf("%s.id", t)
}

func (t tableUserAuthProvider) Provider() string {
	return fmt.Sprintf("%s.provider", t)
}

func (t tableUserAuthProvider) UpdatedAt() string {
	return fmt.Sprintf("%s.updated_at", t)
}

func (t tableUserAuthProvider) UserID() string {
	return fmt.Sprintf("%s.user_id", t)
}

func (t tableUserAuthProvider) VerifiedEmail() string {
	return fmt.Sprintf("%s.verified_email", t)
}

const UserAuthProvider = tableUserAuthProvider("user_auth_providers")

type tableUserInstitution string

func (t tableUserInstitution) String() string {
	return string(t)
}

func (t tableUserInstitution) All() string {
	return fmt.Sprintf("%s.*", t)
}

func (t tableUserInstitution) CreatedAt() string {
	return fmt.Sprintf("%s.created_at", t)
}

func (t tableUserInstitution) DeletedAt() string {
	return fmt.Sprintf("%s.deleted_at", t)
}

func (t tableUserInstitution) ExternalID() string {
	return fmt.Sprintf("%s.external_id", t)
}

func (t tableUserInstitution) ID() string {
	return fmt.Sprintf("%s.id", t)
}

func (t tableUserInstitution) InstitutionID() string {
	return fmt.Sprintf("%s.institution_id", t)
}

func (t tableUserInstitution) UserID() string {
	return fmt.Sprintf("%s.user_id", t)
}

const UserInstitution = tableUserInstitution("user_institutions")
