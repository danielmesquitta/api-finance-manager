// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sqlc

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Account struct {
	ID            uuid.UUID `json:"id"`
	ExternalID    string    `json:"external_id"`
	Name          string    `json:"name"`
	Balance       float64   `json:"balance"`
	Type          string    `json:"type"`
	CreatedAt     time.Time `json:"created_at"`
	UpdatedAt     time.Time `json:"updated_at"`
	UserID        uuid.UUID `json:"user_id"`
	InstitutionID uuid.UUID `json:"institution_id"`
}

type Budget struct {
	ID        uuid.UUID `json:"id"`
	Amount    float64   `json:"amount"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	UserID    uuid.UUID `json:"user_id"`
	Date      time.Time `json:"date"`
}

type BudgetCategory struct {
	ID         uuid.UUID `json:"id"`
	Amount     float64   `json:"amount"`
	CreatedAt  time.Time `json:"created_at"`
	UpdatedAt  time.Time `json:"updated_at"`
	BudgetID   uuid.UUID `json:"budget_id"`
	CategoryID uuid.UUID `json:"category_id"`
}

type Category struct {
	ID         uuid.UUID `json:"id"`
	ExternalID string    `json:"external_id"`
	Name       string    `json:"name"`
	CreatedAt  time.Time `json:"created_at"`
	UpdatedAt  time.Time `json:"updated_at"`
}

type CreditCard struct {
	ID             uuid.UUID `json:"id"`
	Level          string    `json:"level"`
	Brand          string    `json:"brand"`
	Limit          float64   `json:"limit"`
	AvailableLimit float64   `json:"available_limit"`
	CreatedAt      time.Time `json:"created_at"`
	UpdatedAt      time.Time `json:"updated_at"`
	AccountID      uuid.UUID `json:"account_id"`
}

type Institution struct {
	ID         uuid.UUID   `json:"id"`
	ExternalID string      `json:"external_id"`
	Name       string      `json:"name"`
	Logo       pgtype.Text `json:"logo"`
	CreatedAt  time.Time   `json:"created_at"`
	UpdatedAt  time.Time   `json:"updated_at"`
}

type Investment struct {
	ID         uuid.UUID `json:"id"`
	ExternalID string    `json:"external_id"`
	Name       string    `json:"name"`
	Amount     float64   `json:"amount"`
	Type       string    `json:"type"`
	Rate       float64   `json:"rate"`
	RateType   string    `json:"rateType"`
	CreatedAt  time.Time `json:"created_at"`
	UpdatedAt  time.Time `json:"updated_at"`
	UserID     uuid.UUID `json:"user_id"`
}

type Transaction struct {
	ID            uuid.UUID   `json:"id"`
	ExternalID    string      `json:"external_id"`
	Name          string      `json:"name"`
	Description   pgtype.Text `json:"description"`
	Amount        float64     `json:"amount"`
	PaymentMethod string      `json:"payment_method"`
	IsIgnored     bool        `json:"is_ignored"`
	Date          time.Time   `json:"date"`
	CreatedAt     time.Time   `json:"created_at"`
	UpdatedAt     time.Time   `json:"updated_at"`
	UserID        uuid.UUID   `json:"user_id"`
	AccountID     *uuid.UUID  `json:"account_id"`
	CategoryID    *uuid.UUID  `json:"category_id"`
}

type User struct {
	ID                    uuid.UUID   `json:"id"`
	ExternalID            string      `json:"external_id"`
	Provider              string      `json:"provider"`
	Name                  string      `json:"name"`
	Email                 string      `json:"email"`
	VerifiedEmail         bool        `json:"verified_email"`
	Tier                  string      `json:"tier"`
	Avatar                pgtype.Text `json:"avatar"`
	SubscriptionExpiresAt *time.Time  `json:"subscription_expires_at"`
	SynchronizedAt        *time.Time  `json:"synchronized_at"`
	CreatedAt             time.Time   `json:"created_at"`
	UpdatedAt             time.Time   `json:"updated_at"`
}
