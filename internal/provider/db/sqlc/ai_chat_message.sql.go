// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: ai_chat_message.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const createAIChatMessage = `-- name: CreateAIChatMessage :one
INSERT INTO ai_chat_messages (message, ai_chat_id)
VALUES ($1, $2)
RETURNING id, message, created_at, deleted_at, ai_chat_id
`

type CreateAIChatMessageParams struct {
	Message  string    `json:"message"`
	AiChatID uuid.UUID `json:"ai_chat_id"`
}

func (q *Queries) CreateAIChatMessage(ctx context.Context, arg CreateAIChatMessageParams) (AiChatMessage, error) {
	row := q.db.QueryRow(ctx, createAIChatMessage, arg.Message, arg.AiChatID)
	var i AiChatMessage
	err := row.Scan(
		&i.ID,
		&i.Message,
		&i.CreatedAt,
		&i.DeletedAt,
		&i.AiChatID,
	)
	return i, err
}

const deleteAIChatMessages = `-- name: DeleteAIChatMessages :exec
UPDATE ai_chat_messages
SET deleted_at = NOW()
WHERE ai_chat_id = $1
`

func (q *Queries) DeleteAIChatMessages(ctx context.Context, aiChatID uuid.UUID) error {
	_, err := q.db.Exec(ctx, deleteAIChatMessages, aiChatID)
	return err
}
