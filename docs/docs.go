// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Daniel Mesquita",
            "email": "danielmesquitta123@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Health check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HealthResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/accounts/sync": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Webhook to sync accounts from open finance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Sync accounts from open finance",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SyncAccountsRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/categories/sync": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Sync categories from open finance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Sync categories from open finance",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/institutions/sync": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Sync institutions from open finance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Institution"
                ],
                "summary": "Sync institutions from open finance",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/transactions/sync": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Webhook to sync transactions from open finance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Sync transactions from open finance",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/refresh": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Use refresh token to generate new access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/sign-in": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Authenticate user through Google or Apple token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/budgets": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Get budget",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Date",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetBudgetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create or update budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Create or update budget",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpsertBudgetRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Delete budget",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/budgets/categories/{category_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get budget category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Get budget category",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Date",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetBudgetCategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/budgets/categories/{category_id}/transactions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List budget category transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "List budget category transactions",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Date",
                        "name": "date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ListTransactionsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/calculator/cash-vs-installments": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Calculate cash vs installments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calculator"
                ],
                "summary": "Calculate cash vs installments",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CashVsInstallmentsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CashVsInstallmentsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/calculator/compound-interest": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Calculate compound interest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calculator"
                ],
                "summary": "Calculate compound interest",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CompoundInterestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CompoundInterestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/calculator/emergency-reserve": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Calculate emergency reserve",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calculator"
                ],
                "summary": "Calculate emergency reserve",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.EmergencyReserveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.EmergencyReserveResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/calculator/retirement": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Calculate investments needed for retirement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calculator"
                ],
                "summary": "Calculate retirement",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RetirementRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RetirementResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/calculator/simple-interest": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Calculate simple interest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calculator"
                ],
                "summary": "Calculate simple interest",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SimpleInterestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SimpleInterestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/categories": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "List categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ListCategoriesResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/institutions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List all institutions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Institution"
                ],
                "summary": "List institutions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ListInstitutionsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/transactions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "List transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Date",
                        "name": "date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Start date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "End date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Institution ID",
                        "name": "institution_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Payment method ID",
                        "name": "payment_method_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter only expenses",
                        "name": "is_expense",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter only incomes",
                        "name": "is_income",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter ignored or not ignored transactions",
                        "name": "is_ignored",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ListTransactionsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/institutions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List user institutions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Institution"
                ],
                "summary": "List user institutions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ListInstitutionsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get logged-in user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get logged-in user profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserProfileResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CashVsInstallmentsRequest": {
            "type": "object",
            "required": [
                "installments",
                "interest",
                "interest_type",
                "purchase_value"
            ],
            "properties": {
                "cash_discount": {
                    "type": "integer",
                    "minimum": 0
                },
                "cashback": {
                    "type": "integer",
                    "maximum": 10000,
                    "minimum": 0
                },
                "credit_card_interest": {
                    "type": "integer",
                    "maximum": 10000,
                    "minimum": 0
                },
                "installments": {
                    "type": "integer",
                    "minimum": 1
                },
                "interest": {
                    "type": "integer",
                    "maximum": 10000,
                    "minimum": 0
                },
                "interest_type": {
                    "enum": [
                        "MONTHLY",
                        "ANNUAL"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.InterestType"
                        }
                    ]
                },
                "purchase_value": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "dto.CashVsInstallmentsResponse": {
            "type": "object",
            "properties": {
                "cash_flow_by_month": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/usecase.CashFlow"
                    }
                },
                "savings_with_cash": {
                    "type": "integer"
                },
                "savings_with_credit_card": {
                    "type": "integer"
                }
            }
        },
        "dto.CompoundInterestRequest": {
            "type": "object",
            "required": [
                "interest",
                "interest_type",
                "period_in_months"
            ],
            "properties": {
                "initial_deposit": {
                    "type": "integer"
                },
                "interest": {
                    "type": "integer",
                    "maximum": 10000,
                    "minimum": 0
                },
                "interest_type": {
                    "enum": [
                        "MONTHLY",
                        "ANNUAL"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.InterestType"
                        }
                    ]
                },
                "monthly_deposit": {
                    "type": "integer"
                },
                "period_in_months": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "dto.CompoundInterestResponse": {
            "type": "object",
            "properties": {
                "by_month": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/usecase.CompoundInterestResult"
                    }
                },
                "total_amount": {
                    "type": "integer"
                },
                "total_deposit": {
                    "type": "integer"
                },
                "total_interest": {
                    "type": "integer"
                }
            }
        },
        "dto.EmergencyReserveRequest": {
            "type": "object",
            "required": [
                "job_type"
            ],
            "properties": {
                "job_type": {
                    "enum": [
                        "ENTREPRENEUR",
                        "EMPLOYEE",
                        "CIVIL_SERVANT"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.JobType"
                        }
                    ]
                },
                "monthly_expenses": {
                    "type": "integer",
                    "minimum": 0
                },
                "monthly_income": {
                    "type": "integer",
                    "minimum": 0
                },
                "monthly_savings_percentage": {
                    "type": "integer",
                    "maximum": 10000,
                    "minimum": 0
                }
            }
        },
        "dto.EmergencyReserveResponse": {
            "type": "object",
            "properties": {
                "months_to_achieve_emergency_reserve": {
                    "type": "integer"
                },
                "recommended_reserve_in_months": {
                    "type": "integer"
                },
                "recommended_reserve_in_value": {
                    "type": "integer"
                }
            }
        },
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.GetBudgetCategoryResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "available": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "spent": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.GetBudgetResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "available": {
                    "type": "integer"
                },
                "available_per_day": {
                    "type": "integer"
                },
                "available_per_day_percentage_variation": {
                    "type": "integer"
                },
                "available_percentage_variation": {
                    "type": "integer"
                },
                "budget_categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/usecase.GetBudgetBudgetCategories"
                    }
                },
                "comparison_date": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "spent": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.HealthResponse": {
            "type": "object",
            "properties": {
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "dto.ListCategoriesResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Category"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_items": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "dto.ListInstitutionsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Institution"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_items": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "dto.ListTransactionsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Transaction"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_items": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "dto.RetirementRequest": {
            "type": "object",
            "required": [
                "age",
                "goal_income",
                "goal_patrimony",
                "income_investment_percentage",
                "interest",
                "interest_type",
                "life_expectancy",
                "monthly_income",
                "retirement_age"
            ],
            "properties": {
                "age": {
                    "type": "integer",
                    "minimum": 0
                },
                "goal_income": {
                    "type": "integer",
                    "minimum": 0
                },
                "goal_patrimony": {
                    "type": "integer",
                    "minimum": 0
                },
                "income_investment_percentage": {
                    "type": "integer",
                    "maximum": 10000,
                    "minimum": 0
                },
                "initial_deposit": {
                    "type": "integer"
                },
                "interest": {
                    "type": "integer",
                    "maximum": 10000,
                    "minimum": 0
                },
                "interest_type": {
                    "enum": [
                        "MONTHLY",
                        "ANNUAL"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.InterestType"
                        }
                    ]
                },
                "life_expectancy": {
                    "type": "integer",
                    "minimum": 1
                },
                "monthly_income": {
                    "type": "integer",
                    "minimum": 0
                },
                "retirement_age": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "dto.RetirementResponse": {
            "type": "object",
            "properties": {
                "achieved_goal_income": {
                    "type": "boolean"
                },
                "achieved_goal_patrimony": {
                    "type": "boolean"
                },
                "exceeded_goal": {
                    "type": "boolean"
                },
                "exceeded_goal_amount": {
                    "type": "integer"
                },
                "heritage": {
                    "type": "integer"
                },
                "max_monthly_expenses": {
                    "type": "integer"
                },
                "property_on_retirement": {
                    "type": "integer"
                }
            }
        },
        "dto.SignInRequest": {
            "type": "object",
            "required": [
                "provider"
            ],
            "properties": {
                "provider": {
                    "enum": [
                        "GOOGLE",
                        "APPLE",
                        "REFRESH",
                        "MOCK"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.Provider"
                        }
                    ]
                }
            }
        },
        "dto.SignInResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                }
            }
        },
        "dto.SimpleInterestRequest": {
            "type": "object",
            "required": [
                "interest",
                "interest_type",
                "period_in_months"
            ],
            "properties": {
                "initial_deposit": {
                    "type": "integer",
                    "minimum": 0
                },
                "interest": {
                    "type": "integer",
                    "maximum": 10000,
                    "minimum": 0
                },
                "interest_type": {
                    "enum": [
                        "MONTHLY",
                        "ANNUAL"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/entity.InterestType"
                        }
                    ]
                },
                "period_in_months": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "dto.SimpleInterestResponse": {
            "type": "object",
            "properties": {
                "by_month": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/usecase.SimpleInterestResult"
                    }
                },
                "total_amount": {
                    "type": "integer"
                },
                "total_deposit": {
                    "type": "integer"
                },
                "total_interest": {
                    "type": "integer"
                }
            }
        },
        "dto.SyncAccountsRequest": {
            "type": "object",
            "required": [
                "clientUserId",
                "connector",
                "executionStatus",
                "id"
            ],
            "properties": {
                "clientUserId": {
                    "type": "string"
                },
                "connector": {
                    "$ref": "#/definitions/usecase.Institution"
                },
                "executionStatus": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.UpsertBudgetRequest": {
            "type": "object",
            "required": [
                "amount",
                "date"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/usecase.UpsertBudgetCategoryInput"
                    }
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "dto.UserProfileResponse": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "subscription_expires_at": {
                    "type": "string"
                },
                "synchronized_at": {
                    "type": "string"
                },
                "tier": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "verified_email": {
                    "type": "boolean"
                }
            }
        },
        "entity.Category": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Institution": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.InterestType": {
            "type": "string",
            "enum": [
                "MONTHLY",
                "ANNUAL"
            ],
            "x-enum-varnames": [
                "InterestTypeMonthly",
                "InterestTypeAnnual"
            ]
        },
        "entity.JobType": {
            "type": "string",
            "enum": [
                "ENTREPRENEUR",
                "EMPLOYEE",
                "CIVIL_SERVANT"
            ],
            "x-enum-varnames": [
                "JobTypeEntrepreneur",
                "JobTypeEmployee",
                "JobTypeCivilServant"
            ]
        },
        "entity.Provider": {
            "type": "string",
            "enum": [
                "GOOGLE",
                "APPLE",
                "REFRESH",
                "MOCK"
            ],
            "x-enum-varnames": [
                "ProviderGoogle",
                "ProviderApple",
                "ProviderRefresh",
                "ProviderMock"
            ]
        },
        "entity.Transaction": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "institution_id": {
                    "type": "string"
                },
                "is_ignored": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "payment_method_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "subscription_expires_at": {
                    "type": "string"
                },
                "synchronized_at": {
                    "type": "string"
                },
                "tier": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "verified_email": {
                    "type": "boolean"
                }
            }
        },
        "usecase.CashFlow": {
            "type": "object",
            "properties": {
                "cash": {
                    "type": "integer"
                },
                "credit_card": {
                    "type": "integer"
                }
            }
        },
        "usecase.CompoundInterestResult": {
            "type": "object",
            "properties": {
                "monthly_interest": {
                    "type": "integer"
                },
                "total_amount": {
                    "type": "integer"
                },
                "total_deposit": {
                    "type": "integer"
                },
                "total_interest": {
                    "type": "integer"
                }
            }
        },
        "usecase.GetBudgetBudgetCategories": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "available": {
                    "type": "integer"
                },
                "budget_id": {
                    "type": "string"
                },
                "category": {
                    "$ref": "#/definitions/entity.Category"
                },
                "category_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "spent": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "usecase.Institution": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "usecase.SimpleInterestResult": {
            "type": "object",
            "properties": {
                "total_amount": {
                    "type": "integer"
                },
                "total_deposit": {
                    "type": "integer"
                },
                "total_interest": {
                    "type": "integer"
                }
            }
        },
        "usecase.UpsertBudgetCategoryInput": {
            "type": "object",
            "required": [
                "amount",
                "category_id"
            ],
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        },
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "API Finance Manager",
	Description:      "API Finance Manager",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
