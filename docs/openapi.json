{
    "components": {
        "schemas": {
            "dto.CashVsInstallmentsRequest": {
                "properties": {
                    "cash_discount": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "cashback": {
                        "maximum": 10000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "credit_card_interest": {
                        "maximum": 10000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "installments": {
                        "minimum": 1,
                        "type": "integer"
                    },
                    "interest": {
                        "maximum": 10000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "interest_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/entity.InterestType"
                            }
                        ],
                        "enum": [
                            "MONTHLY",
                            "ANNUAL"
                        ]
                    },
                    "purchase_value": {
                        "minimum": 0,
                        "type": "integer"
                    }
                },
                "required": [
                    "installments",
                    "interest",
                    "interest_type",
                    "purchase_value"
                ],
                "type": "object"
            },
            "dto.CashVsInstallmentsResponse": {
                "properties": {
                    "cash_flow_by_month": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/usecase.CashFlow"
                        },
                        "type": "object"
                    },
                    "savings_with_cash": {
                        "type": "integer"
                    },
                    "savings_with_credit_card": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "dto.CompoundInterestRequest": {
                "properties": {
                    "initial_deposit": {
                        "type": "integer"
                    },
                    "interest": {
                        "maximum": 10000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "interest_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/entity.InterestType"
                            }
                        ],
                        "enum": [
                            "MONTHLY",
                            "ANNUAL"
                        ]
                    },
                    "monthly_deposit": {
                        "type": "integer"
                    },
                    "period_in_months": {
                        "minimum": 1,
                        "type": "integer"
                    }
                },
                "required": [
                    "interest",
                    "interest_type",
                    "period_in_months"
                ],
                "type": "object"
            },
            "dto.CompoundInterestResponse": {
                "properties": {
                    "by_month": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/usecase.CompoundInterestResult"
                        },
                        "type": "object"
                    },
                    "total_amount": {
                        "type": "integer"
                    },
                    "total_deposit": {
                        "type": "integer"
                    },
                    "total_interest": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "dto.EmergencyReserveRequest": {
                "properties": {
                    "job_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/entity.JobType"
                            }
                        ],
                        "enum": [
                            "ENTREPRENEUR",
                            "EMPLOYEE",
                            "CIVIL_SERVANT"
                        ]
                    },
                    "monthly_expenses": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "monthly_income": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "monthly_savings_percentage": {
                        "maximum": 10000,
                        "minimum": 0,
                        "type": "integer"
                    }
                },
                "required": [
                    "job_type"
                ],
                "type": "object"
            },
            "dto.EmergencyReserveResponse": {
                "properties": {
                    "months_to_achieve_emergency_reserve": {
                        "type": "integer"
                    },
                    "recommended_reserve_in_months": {
                        "type": "integer"
                    },
                    "recommended_reserve_in_value": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "dto.ErrorResponse": {
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "dto.GetBudgetResponse": {
                "properties": {
                    "amount": {
                        "type": "integer"
                    },
                    "available": {
                        "type": "integer"
                    },
                    "available_per_day": {
                        "type": "integer"
                    },
                    "available_per_day_percentage_variation": {
                        "type": "integer"
                    },
                    "available_percentage_variation": {
                        "type": "integer"
                    },
                    "budget_categories": {
                        "items": {
                            "$ref": "#/components/schemas/usecase.GetBudgetCategoryOutput"
                        },
                        "type": "array"
                    },
                    "comparison_date": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "spent": {
                        "type": "integer"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "dto.HealthResponse": {
                "properties": {
                    "ok": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "dto.ListCategoriesResponse": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/entity.Category"
                        },
                        "type": "array"
                    },
                    "page": {
                        "type": "integer"
                    },
                    "page_size": {
                        "type": "integer"
                    },
                    "total_items": {
                        "type": "integer"
                    },
                    "total_pages": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "dto.ListInstitutionsResponse": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/entity.Institution"
                        },
                        "type": "array"
                    },
                    "page": {
                        "type": "integer"
                    },
                    "page_size": {
                        "type": "integer"
                    },
                    "total_items": {
                        "type": "integer"
                    },
                    "total_pages": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "dto.ListTransactionsResponse": {
                "properties": {
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/entity.Transaction"
                        },
                        "type": "array"
                    },
                    "page": {
                        "type": "integer"
                    },
                    "page_size": {
                        "type": "integer"
                    },
                    "total_items": {
                        "type": "integer"
                    },
                    "total_pages": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "dto.RetirementRequest": {
                "properties": {
                    "age": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "goal_income": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "goal_patrimony": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "income_investment_percentage": {
                        "maximum": 10000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "initial_deposit": {
                        "type": "integer"
                    },
                    "interest": {
                        "maximum": 10000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "interest_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/entity.InterestType"
                            }
                        ],
                        "enum": [
                            "MONTHLY",
                            "ANNUAL"
                        ]
                    },
                    "life_expectancy": {
                        "minimum": 1,
                        "type": "integer"
                    },
                    "monthly_income": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "retirement_age": {
                        "minimum": 1,
                        "type": "integer"
                    }
                },
                "required": [
                    "age",
                    "goal_income",
                    "goal_patrimony",
                    "income_investment_percentage",
                    "interest",
                    "interest_type",
                    "life_expectancy",
                    "monthly_income",
                    "retirement_age"
                ],
                "type": "object"
            },
            "dto.RetirementResponse": {
                "properties": {
                    "achieved_goal_income": {
                        "type": "boolean"
                    },
                    "achieved_goal_patrimony": {
                        "type": "boolean"
                    },
                    "exceeded_goal": {
                        "type": "boolean"
                    },
                    "exceeded_goal_amount": {
                        "type": "integer"
                    },
                    "heritage": {
                        "type": "integer"
                    },
                    "max_monthly_expenses": {
                        "type": "integer"
                    },
                    "property_on_retirement": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "dto.SignInRequest": {
                "properties": {
                    "provider": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/entity.Provider"
                            }
                        ],
                        "enum": [
                            "GOOGLE",
                            "APPLE",
                            "REFRESH",
                            "MOCK"
                        ]
                    }
                },
                "required": [
                    "provider"
                ],
                "type": "object"
            },
            "dto.SignInResponse": {
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "refresh_token": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/entity.User"
                    }
                },
                "type": "object"
            },
            "dto.SimpleInterestRequest": {
                "properties": {
                    "initial_deposit": {
                        "minimum": 0,
                        "type": "integer"
                    },
                    "interest": {
                        "maximum": 10000,
                        "minimum": 0,
                        "type": "integer"
                    },
                    "interest_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/entity.InterestType"
                            }
                        ],
                        "enum": [
                            "MONTHLY",
                            "ANNUAL"
                        ]
                    },
                    "period_in_months": {
                        "minimum": 1,
                        "type": "integer"
                    }
                },
                "required": [
                    "interest",
                    "interest_type",
                    "period_in_months"
                ],
                "type": "object"
            },
            "dto.SimpleInterestResponse": {
                "properties": {
                    "by_month": {
                        "additionalProperties": {
                            "$ref": "#/components/schemas/usecase.SimpleInterestResult"
                        },
                        "type": "object"
                    },
                    "total_amount": {
                        "type": "integer"
                    },
                    "total_deposit": {
                        "type": "integer"
                    },
                    "total_interest": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "dto.SyncAccountsRequest": {
                "properties": {
                    "clientUserId": {
                        "type": "string"
                    },
                    "connector": {
                        "$ref": "#/components/schemas/usecase.Institution"
                    },
                    "executionStatus": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "clientUserId",
                    "connector",
                    "executionStatus",
                    "id"
                ],
                "type": "object"
            },
            "dto.UpsertBudgetRequest": {
                "properties": {
                    "amount": {
                        "type": "integer"
                    },
                    "categories": {
                        "items": {
                            "$ref": "#/components/schemas/usecase.UpsertBudgetCategoryInput"
                        },
                        "type": "array"
                    },
                    "date": {
                        "type": "string"
                    }
                },
                "required": [
                    "amount",
                    "date"
                ],
                "type": "object"
            },
            "dto.UserProfileResponse": {
                "properties": {
                    "avatar": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "external_id": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "provider": {
                        "type": "string"
                    },
                    "subscription_expires_at": {
                        "type": "string"
                    },
                    "synchronized_at": {
                        "type": "string"
                    },
                    "tier": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "verified_email": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "entity.Category": {
                "properties": {
                    "created_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "external_id": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "entity.Institution": {
                "properties": {
                    "created_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "external_id": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "logo": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "entity.InterestType": {
                "enum": [
                    "MONTHLY",
                    "ANNUAL"
                ],
                "type": "string",
                "x-enum-varnames": [
                    "InterestTypeMonthly",
                    "InterestTypeAnnual"
                ]
            },
            "entity.JobType": {
                "enum": [
                    "ENTREPRENEUR",
                    "EMPLOYEE",
                    "CIVIL_SERVANT"
                ],
                "type": "string",
                "x-enum-varnames": [
                    "JobTypeEntrepreneur",
                    "JobTypeEmployee",
                    "JobTypeCivilServant"
                ]
            },
            "entity.Provider": {
                "enum": [
                    "GOOGLE",
                    "APPLE",
                    "REFRESH",
                    "MOCK"
                ],
                "type": "string",
                "x-enum-varnames": [
                    "ProviderGoogle",
                    "ProviderApple",
                    "ProviderRefresh",
                    "ProviderMock"
                ]
            },
            "entity.Transaction": {
                "properties": {
                    "account_id": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "integer"
                    },
                    "category_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "external_id": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "institution_id": {
                        "type": "string"
                    },
                    "is_ignored": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "payment_method_id": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "entity.User": {
                "properties": {
                    "avatar": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "external_id": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "provider": {
                        "type": "string"
                    },
                    "subscription_expires_at": {
                        "type": "string"
                    },
                    "synchronized_at": {
                        "type": "string"
                    },
                    "tier": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "verified_email": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "usecase.CashFlow": {
                "properties": {
                    "cash": {
                        "type": "integer"
                    },
                    "credit_card": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "usecase.CompoundInterestResult": {
                "properties": {
                    "monthly_interest": {
                        "type": "integer"
                    },
                    "total_amount": {
                        "type": "integer"
                    },
                    "total_deposit": {
                        "type": "integer"
                    },
                    "total_interest": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "usecase.GetBudgetCategoryOutput": {
                "properties": {
                    "amount": {
                        "type": "integer"
                    },
                    "available": {
                        "type": "integer"
                    },
                    "budget_id": {
                        "type": "string"
                    },
                    "category": {
                        "$ref": "#/components/schemas/entity.Category"
                    },
                    "category_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "spent": {
                        "type": "integer"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "usecase.Institution": {
                "properties": {
                    "id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "id"
                ],
                "type": "object"
            },
            "usecase.SimpleInterestResult": {
                "properties": {
                    "total_amount": {
                        "type": "integer"
                    },
                    "total_deposit": {
                        "type": "integer"
                    },
                    "total_interest": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "usecase.UpsertBudgetCategoryInput": {
                "properties": {
                    "amount": {
                        "type": "integer"
                    },
                    "category_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "amount",
                    "category_id"
                ],
                "type": "object"
            }
        },
        "securitySchemes": {
            "BasicAuth": {
                "scheme": "basic",
                "type": "http"
            },
            "BearerAuth": {
                "description": "Type \"Bearer\" followed by a space and JWT token.",
                "in": "header",
                "name": "Authorization",
                "type": "apiKey"
            }
        }
    },
    "info": {
        "contact": {
            "email": "danielmesquitta123@gmail.com",
            "name": "Daniel Mesquita"
        },
        "description": "API Finance Manager",
        "title": "API Finance Manager",
        "version": "1.0"
    },
    "openapi": "3.0.3",
    "paths": {
        "/health": {
            "get": {
                "description": "Health check",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.HealthResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Health check",
                "tags": [
                    "Health"
                ]
            }
        },
        "/v1/admin/accounts/sync": {
            "post": {
                "description": "Webhook to sync accounts from open finance",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dto.SyncAccountsRequest"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true,
                    "x-originalParamName": "request"
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "summary": "Sync accounts from open finance",
                "tags": [
                    "Account"
                ]
            }
        },
        "/v1/admin/categories/sync": {
            "post": {
                "description": "Sync categories from open finance",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "summary": "Sync categories from open finance",
                "tags": [
                    "Category"
                ]
            }
        },
        "/v1/admin/institutions/sync": {
            "post": {
                "description": "Sync institutions from open finance",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "summary": "Sync institutions from open finance",
                "tags": [
                    "Institution"
                ]
            }
        },
        "/v1/admin/transactions/sync": {
            "post": {
                "description": "Webhook to sync transactions from open finance",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "summary": "Sync transactions from open finance",
                "tags": [
                    "Transaction"
                ]
            }
        },
        "/v1/auth/refresh": {
            "post": {
                "description": "Use refresh token to generate new access token",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.SignInResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Refresh token",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/v1/auth/sign-in": {
            "post": {
                "description": "Authenticate user through Google or Apple token",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dto.SignInRequest"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true,
                    "x-originalParamName": "request"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.SignInResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Sign in",
                "tags": [
                    "Auth"
                ]
            }
        },
        "/v1/budgets": {
            "delete": {
                "description": "Delete budget",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Delete budget",
                "tags": [
                    "Budget"
                ]
            },
            "get": {
                "description": "Get budget",
                "parameters": [
                    {
                        "description": "Date",
                        "in": "query",
                        "name": "date",
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.GetBudgetResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Get budget",
                "tags": [
                    "Budget"
                ]
            },
            "post": {
                "description": "Create or update budget",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dto.UpsertBudgetRequest"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true,
                    "x-originalParamName": "request"
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Create or update budget",
                "tags": [
                    "Budget"
                ]
            }
        },
        "/v1/calculator/cash-vs-installments": {
            "post": {
                "description": "Calculate cash vs installments",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dto.CashVsInstallmentsRequest"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true,
                    "x-originalParamName": "request"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.CashVsInstallmentsResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Calculate cash vs installments",
                "tags": [
                    "Calculator"
                ]
            }
        },
        "/v1/calculator/compound-interest": {
            "post": {
                "description": "Calculate compound interest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dto.CompoundInterestRequest"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true,
                    "x-originalParamName": "request"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.CompoundInterestResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Calculate compound interest",
                "tags": [
                    "Calculator"
                ]
            }
        },
        "/v1/calculator/emergency-reserve": {
            "post": {
                "description": "Calculate emergency reserve",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dto.EmergencyReserveRequest"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true,
                    "x-originalParamName": "request"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.EmergencyReserveResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Calculate emergency reserve",
                "tags": [
                    "Calculator"
                ]
            }
        },
        "/v1/calculator/retirement": {
            "post": {
                "description": "Calculate investments needed for retirement",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dto.RetirementRequest"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true,
                    "x-originalParamName": "request"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.RetirementResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Calculate retirement",
                "tags": [
                    "Calculator"
                ]
            }
        },
        "/v1/calculator/simple-interest": {
            "post": {
                "description": "Calculate simple interest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dto.SimpleInterestRequest"
                            }
                        }
                    },
                    "description": "Request body",
                    "required": true,
                    "x-originalParamName": "request"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.SimpleInterestResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Calculate simple interest",
                "tags": [
                    "Calculator"
                ]
            }
        },
        "/v1/categories": {
            "get": {
                "description": "List categories",
                "parameters": [
                    {
                        "description": "Search",
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Page size",
                        "in": "query",
                        "name": "page_size",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ListCategoriesResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "List categories",
                "tags": [
                    "Category"
                ]
            }
        },
        "/v1/institutions": {
            "get": {
                "description": "List all institutions",
                "parameters": [
                    {
                        "description": "Search",
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Page size",
                        "in": "query",
                        "name": "page_size",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ListInstitutionsResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "List institutions",
                "tags": [
                    "Institution"
                ]
            }
        },
        "/v1/transactions": {
            "get": {
                "description": "List transactions",
                "parameters": [
                    {
                        "description": "Search",
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Page size",
                        "in": "query",
                        "name": "page_size",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Start date",
                        "in": "query",
                        "name": "start_date",
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "End date",
                        "in": "query",
                        "name": "end_date",
                        "schema": {
                            "format": "date",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Institution ID",
                        "in": "query",
                        "name": "institution_id",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Category ID",
                        "in": "query",
                        "name": "category_id",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Payment method ID",
                        "in": "query",
                        "name": "payment_method_id",
                        "schema": {
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter only expenses",
                        "in": "query",
                        "name": "is_expense",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Filter only incomes",
                        "in": "query",
                        "name": "is_income",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ListTransactionsResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "List transactions",
                "tags": [
                    "Transaction"
                ]
            }
        },
        "/v1/users/institutions": {
            "get": {
                "description": "List user institutions",
                "parameters": [
                    {
                        "description": "Search",
                        "in": "query",
                        "name": "search",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Page",
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Page size",
                        "in": "query",
                        "name": "page_size",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ListInstitutionsResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "List user institutions",
                "tags": [
                    "Institution"
                ]
            }
        },
        "/v1/users/profile": {
            "get": {
                "description": "Get logged-in user profile",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.UserProfileResponse"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Unauthorized"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dto.ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "summary": "Get logged-in user profile",
                "tags": [
                    "User"
                ]
            }
        }
    }
}